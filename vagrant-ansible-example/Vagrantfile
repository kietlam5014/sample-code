# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure(2) do |config|
  config.vm.box = "ubuntu/vivid64"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  config.vm.network "forwarded_port", guest: 80, host: 8080


  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  config.vm.provider "virtualbox" do |vb|
    vb.name = "lamp"
    vb.customize ["modifyvm", :id, "--cpus", "1", "--memory", "512"]
  end

  config.vm.define "LAMP" do |lamp|
    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    lamp.vm.network "private_network", ip: "192.168.33.10"
    lamp.vm.hostname = "lamp.internal"

    # Enable provisioning with a shell script. Additional provisioners such as
    # Puppet, Chef, Ansible, Salt, and Docker are also available. Please see the
    # documentation for more information about their specific syntax and use.
    config.vm.provision "ansible" do |ansible|
      ansible.inventory_path = "provisioning/inventory"
      ansible.playbook = "provisioning/playbook.yml"
      ansible.limit = "lamp"
      ansible.sudo = true
    end
  end
end
